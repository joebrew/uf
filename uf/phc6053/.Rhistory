setwd("E:/workingdirectory/phc6053")
##############################
# USE THE SAS7BDAT PACKAGE TO READ IN THE DATA
##############################
library(sas7bdat)
df <- read.sas7bdat("wcgs.sas7bdat") # assignment 2 file?
df$LNSBP <- log(df$SYSBP)
df$LNSBP <- log(df$SYSBP)
df$SYSBP
colnames(df)
df <- read.sas7bdat("fghm60.sas7bdat") # assignment 2 file?
#df <- read.ssd("E:/workingdirectory/phc6053", "fghm60",
df <- read.ssd("E:/workingdirectory/phc6053", "fghm60",
sascmd="C:/Program Files/SASHome93/SASFoundation/9.3/sas.exe")
library(sas7bdat)
library(foreign)
df <- read.ssd("E:/workingdirectory/phc6053", "fghm60",
sascmd="C:/Program Files/SASHome93/SASFoundation/9.3/sas.exe")
colnames(df)
is.data.frame(df)
colnames(df)
summary(df)
df$LNSBP <- log(df$SYSBP)
df$BMIGROUPS <- factor(ifelse(df$BMI < 18.5,
1,
ifelse(df$BMI >= 18.5 &
df$BMI < 25,
2,
ifelse(df$BMI >= 25 &
df$BMI < 30,
3,
ifelse(df$BMI >= 30,
4,
NA)))),
labels=c("Underweight",
"Normal",
"Overweight",
"Obese"))
summary(df$BMIGROUPS)
df$SEX <- factor(df$SEX, labels=c("Male", "Female"))
males <- df[which(df$SEX == "Male"),]
females <- df[which(df$SEX == "Female"),]
t.test(df$SYSBP ~ df$SEX)
t.test(df$SYSBP ~ df$SEX, var.equal=TRUE)
t.test(df$SYSBP ~ df$SEX)
summary(df$BMIGROUPS)
Underweight <- df[which(df$BMIGROUPS == "Underweight"),]
Underweight <- df[which(df$BMIGROUPS == "Underweight"),]
Normal <- df[which(df$BMIGROUPS == "Normal"),]
Overweight <- df[which(df$BMIGROUPS == "Overweight"),]
Obese <- df[which(df$BMIGROUPS == "Obese"),]
partC <- function(x){
print(c(nrow(x), mean(x$SYSBP), median(x$SYSBP), sd(x$SYSBP)))}
partC(Underweight)
partC(Normal)
partC(Overweight)
partC(Obese)
aov.out <- aov(df$SYSBP ~ df$BMIGROUPS)
aov.out
model.tables(aov.out)
summary(aov.out)
plot(aov.out)
model <- manov(df$SYSBP ~ df$BMIGROUPS)
model <- manova(df$SYSBP ~ df$BMIGROUPS)
summary(aov.out)
summary(manova(df$SYSBP ~ df$BMIGROUPS))
partC(Underweight)
summary(males$SYSBP)
sd(males$SYSBP)
summary(females$SYSBP)
sd(females$SYSBP)
t.test(df$SYSBP ~ df$SEX)
t.test(df$SYSBP ~ df$SEX, var.equal=TRUE)
t.test(df$SYSBP ~ df$SEX)
t.test(df$SYSBP ~ df$SEX, var.equal=TRUE)
boxplot(df$SYSBP~df$BMIGROUPS)
TukeyHSD(aov.out)
t.test(df$SYSBP ~ df$SEX, var.equal=TRUE)
t.test(df$SYSBP ~ df$SEX)
partC(Underweight)
partC(Normal)
partC(Overweight)
partC(Obese)
aov.out <- aov(df$SYSBP ~ df$BMIGROUPS)
summary(aov.out)
aov.out
summary(aov.out)
11483+227456
setwd("E:/workingdirectory/phc6053")
##############################
# USE THE SAS7BDAT PACKAGE TO READ IN THE DATA
##############################
library(sas7bdat)
library(foreign)
df <- read.ssd("E:/workingdirectory/phc6053", "fghm60",
sascmd="C:/Program Files/SASHome93/SASFoundation/9.3/sas.exe")
##############################
# MAKE SURE WE'RE LOOKING AT THE RIGHT STUFF
##############################
is.data.frame(df)
colnames(df)
summary(df)
##############################
# CREATE THE LOG OF SYSBP
##############################
df$LNSBP <- log(df$SYSBP)
##############################
# CREATE THE CATEGORIZED BMI VARIABLE
##############################
df$BMIGROUPS <- factor(ifelse(df$BMI < 18.5,
1,
ifelse(df$BMI >= 18.5 &
df$BMI < 25,
2,
ifelse(df$BMI >= 25 &
df$BMI < 30,
3,
ifelse(df$BMI >= 30,
4,
NA)))),
labels=c("Underweight",
"Normal",
"Overweight",
"Obese"))
summary(df$BMIGROUPS)
##############################
# FIX THE SEX COLUMN
##############################
df$SEX <- factor(df$SEX, labels=c("Male", "Female"))
##############################
# CREATE A MALES AND FEMALES DATAFRAME
##############################
males <- df[which(df$SEX == "Male"),]
females <- df[which(df$SEX == "Female"),]
##############################
# NUMERIC SUMMARY OF SYSBP WITHIN EACH SEX
##############################
summary(males$SYSBP)
sd(males$SYSBP)
summary(females$SYSBP)
sd(females$SYSBP)
##############################
# TWO SAMPLE T-TEST TO COMPARE MEAN OF SYSBP BETWEEN TWO LEVELS OF SEX
# GET P-VALUE FOR TEST FOR EQUALITY OF VARIANCE
# P-VALUE FOR APPROPRIATE T-TEST
# APPROPRIATE 95% CONFIDENCE INTERVAL FOR DIFFERENT BETWEEN MEAN SYSBP
# CONCLUSION
##############################
t.test(df$SYSBP ~ df$SEX)
t.test(df$SYSBP ~ df$SEX, var.equal=TRUE)
##############################
# PROVIDE NUMERIC SUMMARY OF SYSBP WITHIN EACH LEVEL OF BMIGROUPS
# MEAN
# MEDIAN
# SD
##############################
Underweight <- df[which(df$BMIGROUPS == "Underweight"),]
Normal <- df[which(df$BMIGROUPS == "Normal"),]
Overweight <- df[which(df$BMIGROUPS == "Overweight"),]
Obese <- df[which(df$BMIGROUPS == "Obese"),]
partC <- function(x){
print(c(nrow(x), mean(x$SYSBP), median(x$SYSBP), sd(x$SYSBP)))}
partC(Underweight)
partC(Normal)
partC(Overweight)
partC(Obese)
##############################
# CONDUCT AN ANOVA TO COMPARE MEAN SYSBP BETWEEN FOUR LEVELS OF
# BMIGROUPS
### PROVIDE VALUES IN BASIC ANOVA TABLE
##############################
aov.out <- aov(df$SYSBP ~ df$BMIGROUPS)
summary(aov.out)
aov.out
TukeyHSD(aov.out)
##############################
# PROVIDE SIDE BY SIDE BOXPLOTS OF SYSBP WITHIN EACH SEX
##############################
##############################
# PROVIDE SIDE BY SIDE BOXPLOTS OF SYSBP WITHIN EACH LEVEL
# OF BMIGROUPS
##############################
##############################
# SCATTERPLOT Y=SYSBP X=BMI, with LOESS CURVE
##############################
##############################
# BOXPLOTS
##############################
boxplot(df$SYSBP~df$BMIGROUPS)
##############################
#
##############################
##############################
#
##############################
##############################
#
##############################
##############################
#
##############################
##############################
#
##############################
##############################
#
##############################
##############################
#
##############################
##############################
#
##############################
save.image("E:/workingdirectory/phc6053/ass2.RData")
df <- read.ssd("E:/workingdirectory/phc6053", "fghm81",
sascmd="C:/Program Files/SASHome93/SASFoundation/9.3/sas.exe")
library(RODBC) # Read in the
bm <- odbcConnect("vw_BirthMaster", uid="BrewJR", pwd="stopFlu2013")
##################################
# See which tables I can access
##################################
sqlTables(bm) # in bm, I only need DEATHMASTER and vw_BirthMaster
##################################
# SET VARIABLES
##################################
###############################
myBirthVars <- paste("EVENT_YEAR,",
"MOTHER_AGE, MOTHER_RES_COUNTY,",
"MOTHER_EDCODE, MOTHER_MARRIED, BIRTH_WEIGHT_GRAMS, MOTHER_WIC_YESNO,",
"PRINCIPAL_SRCPAY_CODE, INFANT_LIVING, DEATH_OCCURRED, DATE_OF_DEATH,",
"MOTHER_RACE_BLACK, MOTHER_RACE_WHITE,",
"TOBACCO_USE_YESNO,",
"DEATH_SFN")
myDeathVars <- paste("EVENT_YEAR, RESID_COUNTY, STATE_FILE_NUMBER, RESID_STATE, AGE,",
"AGE_CODE, DATE_OF_BIRTH_YEAR")
myAlachuaVars <- paste("EVENT_YEAR,",
"MOTHER_AGE, MOTHER_RES_COUNTY,",
"MOTHER_EDCODE, MOTHER_MARRIED, BIRTH_WEIGHT_GRAMS, MOTHER_WIC_YESNO,",
"PRINCIPAL_SRCPAY_CODE, INFANT_LIVING, DEATH_OCCURRED, DATE_OF_DEATH,",
"MOTHER_RACE_BLACK, MOTHER_RACE_WHITE,",
"TOBACCO_USE_YESNO, PRINCIPAL_SRCPAY_CODE",
"MOTHER_RES_ZIP, DEATH_SFN, DATE_OF_BIRTH")
myFLVars <- paste("MOTHER_WIC_YESNO, EVENT_YEAR,",
"MOTHER_EDCODE, MOTHER_MARRIED, MOTHER_RACE_BLACK")
myFLVars2 <- paste("BIRTH_WEIGHT_GRAMS, EVENT_YEAR, MOTHER_RACE_WHITE, MOTHER_RACE_BLACK",
"MOTHER_RES_COUNTY")
##################################
allBirths <- sqlQuery(bm, paste("select",
myBirthVars,
"from vw_BirthMaster",
"where EVENT_YEAR > 2005",
"and MOTHER_RES_STATE = 'FLORIDA'",
"order by MOTHER_RES_COUNTY"))
##################################
# DEATHMASTER
##################################
allDeaths <- sqlQuery(bm, paste("select",
myDeathVars,
"from DEATHMASTER",
"where EVENT_YEAR > 2005",
"and RESID_STATE = 'FLORIDA'",
"and DATE_OF_BIRTH_YEAR >2005",
"order by RESID_COUNTY"))
#
##################################
# alachuaBirths
##################################
alachuaBirths <- sqlQuery(bm, paste("select",
myAlachuaVars,
"from vw_BirthMaster",
"where EVENT_YEAR > 1980",
"and MOTHER_RES_COUNTY = 'ALACHUA'",
"order by MOTHER_RES_COUNTY"))
##################################
# alachuaDeaths
##################################
alachuaDeaths <- sqlQuery(bm, paste("select",
myDeathVars,
"from DEATHMASTER",
"where EVENT_YEAR > 1980",
"and RESID_COUNTY = 'ALACHUA'",
"and DATE_OF_BIRTH_YEAR > 1980",
"order by RESID_COUNTY"))
#
##################################
# allBirthsFL
##################################
#allBirthsFL <- sqlQuery(bm, paste("select",
#                                  myFLVars,
#                                  "from vw_BirthMaster",
#                                  "where EVENT_YEAR > 1980",
#                                  "and MOTHER_RES_STATE = 'FLORIDA'"))
colnames(alachuaBirths)
summary(alachuaBirths$MOTHER_AGE)
summary(factor(alachuaBirths$MOTHER_AGE))
summary(factor(alachuaBirths$MOTHER_AGE[which(alachuaBirths$EVENT_YEAR > 1990)]))
summary(factor(alachuaBirths$MOTHER_AGE[which(alachuaBirths$EVENT_YEAR >= 1990)]))
