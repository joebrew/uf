library(rgdal)
#setwd("C:/Users/BrewJR/Documents/uf/phc7901/")
setwd("/home/joebrew/Documents/uf/phc7901")
# tract
tract <- readOGR("lac_census_tracts", "tl_2010_06037_tract10")
plot(tract, col = sample(rainbow(nrow(tract)), nrow(tract)), border = FALSE)
#block
block <- readOGR("lac_census_blocks", "tl_2010_06037_tabblock10")
# Convert taact to an equal area projection
# list of projections: http://www.remotesensing.org/geotiff/proj_list/
# Albers equal area for California
#http://spatialreference.org/ref/sr-org/california-current-albers-equal-area-conic-wgs84/
tract2 <- spTransform(tract,
CRS("+proj=aea +lat_1=30 +lat_2=50 +lat_0=40 +lon_0=-125 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
block2 <- spTransform(block,
CRS("+proj=aea +lat_1=30 +lat_2=50 +lat_0=40 +lon_0=-125 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs"))
# Tract2 is in meters, so this is in squared meters:
library(rgeos)
gArea(tract2)
gArea(block2)
# Compute areas for tract2 and block2
tract2$area <- NA
for (i in 1:nrow(tract2)){
tract2$area[i] <- tract2@polygons[[i]]@area
}
block2$area <- NA
for (i in 1:nrow(block2)){
block2$area[i] <- block2@polygons[[i]]@area
}
# Get square miles (from meters)
MetersToMiles <- function(x){
x * (1/2589988.110336)
}
tract2$sqmiles <- MetersToMiles(tract2$area)
block2$sqmiles <- MetersToMiles(block2$area)
mean(tract2$sqmiles)
mean(block2$sqmiles)
# Get maximum inner-tract distance
tract2$maxdist <- NA
for (i in 1:nrow(tract2)){
mycoords <- tract2@polygons[[i]]@Polygons[[1]]@coords
# Loop through all edge coordinates to get furthest distance
dist <- list()
for (j in 1:nrow(mycoords)){
z <-
sqrt(
((mycoords[j,1] - mycoords[,1])^2) + ((mycoords[j,2] - mycoords[,2])^2)
)
z <- max(z)
dist[j] <- z
}
tract2$maxdist[i] <- max(unlist(dist))
}
block2$maxdist <- NA
for (i in 1:nrow(block2)){
mycoords <- block2@polygons[[i]]@Polygons[[1]]@coords
# Loop through all edge coordinates to get furthest distance
dist <- list()
for (j in 1:nrow(mycoords)){
z <-
sqrt(
((mycoords[j,1] - mycoords[,1])^2) + ((mycoords[j,2] - mycoords[,2])^2)
)
z <- max(z)
dist[j] <- z
}
block2$maxdist[i] <- max(unlist(dist))
}
# Average maximum possible distance in each tract:
mean(tract2$maxdist / 1609)
mean(block2$maxdist / 1609)
# Max dist in miles
tract2$maxdistmiles <- tract2$maxdist / 1609
block2$maxdistmiles <- block2$maxdist / 1609
# Plot by maximum allowable distance
my_colors <- colorRampPalette(c("white", "red"))(max(ceiling(tract2$maxdist)))
par(mfrow=c(1,2))
plot(tract2,
col = my_colors[ceiling(tract2$maxdist)],
border = FALSE)
plot(block2,
col = my_colors[ceiling(block2$maxdist)],
border = FALSE)
legend(left,
fill = my_colors[quantile(tract2$maxdist, probs = seq(0.1,1, length = 10))],
border = NA
y.intersp = 0.5,
legend = c(my_colors[quantile(tract2$maxdist, probs = 0.1)],
NA, NA, NA,
my_colors[quantile(tract2$maxdist, probs = 0.5)],
NA, NA, NA, NA,
my_colors[quantile(tract2$maxdist, probs = 1)]))
legend(left,
fill = my_colors[quantile(tract2$maxdist, probs = seq(0.1,1, length = 10))],
border = NA,
y.intersp = 0.5,
legend = c(my_colors[quantile(tract2$maxdist, probs = 0.1)],
NA, NA, NA,
my_colors[quantile(tract2$maxdist, probs = 0.5)],
NA, NA, NA, NA,
my_colors[quantile(tract2$maxdist, probs = 1)]))
legend("left",
fill = my_colors[quantile(tract2$maxdist, probs = seq(0.1,1, length = 10))],
border = NA,
y.intersp = 0.5,
legend = c(my_colors[quantile(tract2$maxdist, probs = 0.1)],
NA, NA, NA,
my_colors[quantile(tract2$maxdist, probs = 0.5)],
NA, NA, NA, NA,
my_colors[quantile(tract2$maxdist, probs = 1)]))
mean(tract2$maxdist / 1609)
legend("right",
fill = my_colors[quantile(tract2$maxdist, probs = seq(0.1,1, length = 10))],
border = NA,
y.intersp = 0.5,
legend = c(quantile(tract2$maxdist, probs = 0.1),
NA, NA, NA,
quantile(tract2$maxdist, probs = 0.5),
NA, NA, NA, NA,
quantile(tract2$maxdist, probs = 1)))
mean(tract2$sqmiles)
par(mfrow = c(1,1))
mean(tract2$sqmiles)
hist(tract2$sqmiles)
mean(tract2$maxdist / 1609)
sd(tract2$sqmiles)
median(tract2$sqmiles)
median(block2$sqmiles)
median(tract2maxdistmiles)
median(tract2$maxdistmiles)
tract2buf <- gBuffer(tract2, width=804.5) # need more ram to perform on all
summary(tract2buf@data)
?lapply
lapply(tract2buf, mean(area))
lapply(tract2buf, function(x){mean(x$area)})
# Plot by maximum allowable distance
my_colors <- colorRampPalette(c("grey", "darkred"))(max(ceiling(tract2$maxdist)))
par(mfrow=c(1,2))
plot(tract2,
col = my_colors[ceiling(tract2$maxdist)],
border = FALSE)
plot(block2,
col = my_colors[ceiling(block2$maxdist)],
border = FALSE)
legend("right",
fill = my_colors[quantile(tract2$maxdist, probs = seq(0.1,1, length = 10))],
border = NA,
y.intersp = 0.5,
legend = round(c(quantile(tract2$maxdist, probs = 0.1),
NA, NA, NA,
quantile(tract2$maxdist, probs = 0.5),
NA, NA, NA, NA,
quantile(tract2$maxdist, probs = 1)), digits = 2))
sd(tract2$sqmiles)
1403 / 10
1403 / 10
round(1403.53, digits = -2)
plot(tract2)
coordinates(tract2)
hist(coordinates(tract2)[,2])
plot(tract2, ylim = c(-6800000, -5500000))
hist(coordinates(tract2)[,2])
plot(tract2, ylim = c(-680000, -550000))
plot(tract2, ylim = c(-682000, -540000))
plot(tract2, ylim = c(-680000, -560000))
abline(h = -670000)
abline(h = -680000)
plot(tract2, ylim = c(-690000, -570000))
plot(tract2, ylim = c(-690000, -560000))
par(mfrow=c(1,2))
plot(tract2,
col = my_colors[ceiling(tract2$maxdist)],
border = FALSE,
ylim = c(-690000, -560000))
plot(block2,
col = my_colors[ceiling(block2$maxdist)],
border = FALSE,
ylim = c(-690000, -560000))
median(block2$maxdist / 1609)
median(block2$maxdist / 1609) / median(tract2$maxdist / 1609)
getwd()
cal <- read.csv("california_census_data/ACS_10_5YR_DP05_with_ann.csv", skip = 1)
head(cal)
head(cal[,1:5])
head(tract2@data)
head(cal[,1:5])
cal$Geography
head(tract2@data)
?substr
substr(cal$Geography, 14, 21)
substr(cal$Geography, 12, 21)
str(cal$Geography)
as.numeric(as.character(cal$Geography))
gsub("[^0-9]", "", cal$Geography)
cal$Geography
gsub("[^0-9, .]", "", cal$Geography)
gsub("[^0-9, [.]]", "", cal$Geography)
gsub("[^0-9, \.]", "", cal$Geography)
gsub("[^0-9.]", "", cal$Geography)
cal$NAME10 <- as.numeric(gsub("[^0-9.]", "", cal$Geography))
names(cal)
cal <- read.csv("california_census_data/ACS_10_5YR_DP05_with_ann.csv", skip = 0)
# Clean up tract
cal$NAME10 <- as.numeric(gsub("[^0-9.]", "", cal$Geography))
headcal
head(cal)
head(cal[,1:5])
cal <- read.csv("california_census_data/ACS_10_5YR_DP05_with_ann.csv", skip = 1)
# Clean up tract
cal$NAME10 <- as.numeric(gsub("[^0-9.]", "", cal$Geography))
names(cal)
cal <- read.csv("california_census_data/ACS_10_5YR_DP05_with_ann.csv", skip = 0)
# Clean up tract
cal$NAME10 <- as.numeric(gsub("[^0-9.]", "", cal$GEO.display-label))
names(cal)
cal$NAME10 <- as.numeric(gsub("[^0-9.]", "", cal$GEO.display.label))
plot(1:10, 1:10, type = "n")
my_colors
length(my_colors)
quantile(1:length(my_colors))
round(quantile(1:length(my_colors)))
round(quantile(1:length(my_colors)), digits = -2)
round(quantile(1:length(my_colors)))
round(quantile(tract2$maxdist), digits = -2)
legend("right",
fill = my_colors[round(quantile(1:length(my_colors)))],
border = NA,
y.intersp = 0.5,
legend = round(quantile(tract2$maxdist), digits = -2))
plot(1:10, 1:10, type = "n")
legend("center",
fill = my_colors[round(quantile(1:length(my_colors)))],
border = NA,
y.intersp = 0.5,
legend = round(quantile(tract2$maxdist/1609), digits = -2))
tract2$maxdist
plot(1:10, 1:10, type = "n")
legend("center",
fill = my_colors[round(quantile(1:length(my_colors)))],
border = NA,
y.intersp = 0.5,
legend = round(quantile(tract2$maxdist/1609), digits = 0))
plot(1:10, 1:10, type = "n")
legend("center",
fill = my_colors[round(quantile(1:length(my_colors)))],
border = NA,
y.intersp = 0.5,
legend = round(quantile(tract2$maxdist/1609), digits = 2))
myprobs <- seq(0.1, 1, 0.1)
myprobs
?quantile
plot(1:10, 1:10, type = "n")
myprobs <- seq(0.1, 1, 0.1)
legend("center",
fill = my_colors[round(quantile(1:length(my_colors)),
probs = myprobs)],
border = NA,
y.intersp = 0.5,
legend = round(quantile(tract2$maxdist/1609,
probs = myprobs), digits = 2))
legend("center",
fill = my_colors[round(quantile(1:length(my_colors),
probs = myprobs))],
border = NA,
y.intersp = 0.5,
legend = round(quantile(tract2$maxdist/1609,
probs = myprobs), digits = 2))
plot(1:10, 1:10, type = "n")
myprobs <- seq(0.1, 1, 0.1)
legend("center",
fill = my_colors[round(quantile(1:length(my_colors),
probs = myprobs))],
border = NA,
y.intersp = 0.5,
legend = round(
c(quantile(tract2$maxdist/1609,
probs = myprobs)[1],
NA, NA, NA
quantile(tract2$maxdist/1609,
probs = myprobs)[5],
NA, NA, NA,
quantile(tract2$maxdist/1609,
probs = myprobs)[9],
NA
)
,
digits = 1))
quantile(tract2$maxdist/1609,
probs = myprobs)[9]
quantile(tract2$maxdist/1609,
probs = myprobs)[5]
c(quantile(tract2$maxdist/1609,
probs = myprobs)[1]
round(
c(quantile(tract2$maxdist/1609,
probs = myprobs)[1],
NA, NA, NA
quantile(tract2$maxdist/1609,
probs = myprobs)[5],
NA, NA, NA,
quantile(tract2$maxdist/1609,
probs = myprobs)[9],
NA
)
,
digits = 1)
plot(1:10, 1:10, type = "n")
myprobs <- seq(0.1, 1, 0.1)
legend("center",
fill = my_colors[round(quantile(1:length(my_colors),
probs = myprobs))],
border = NA,
y.intersp = 0.5,
legend = round(
c(quantile(tract2$maxdist/1609,
probs = myprobs)[1],
NA, NA, NA,
quantile(tract2$maxdist/1609,
probs = myprobs)[5],
NA, NA, NA,
quantile(tract2$maxdist/1609,
probs = myprobs)[9],
NA
)
,
digits = 1))
par(mfrow = c(1,1))
plot(1:10, 1:10, type = "n")
myprobs <- seq(0.1, 1, 0.1)
legend("center",
fill = my_colors[round(quantile(1:length(my_colors),
probs = myprobs))],
border = NA,
y.intersp = 0.5,
legend = round(
c(quantile(tract2$maxdist/1609,
probs = myprobs)[1],
NA, NA, NA,
quantile(tract2$maxdist/1609,
probs = myprobs)[5],
NA, NA, NA,
quantile(tract2$maxdist/1609,
probs = myprobs)[9],
NA
)
,
digits = 1))
plot(1:10, 1:10, type = "n")
myprobs <- seq(0.1, 1, 0.1)
legend("center",
fill = my_colors[round(quantile(1:length(my_colors),
probs = myprobs))],
border = NA,
y.intersp = 0.5,
legend = round(
c(quantile(tract2$maxdist/1609,
probs = myprobs)[1],
NA, NA, NA,
quantile(tract2$maxdist/1609,
probs = myprobs)[5],
NA, NA, NA,
quantile(tract2$maxdist/1609,
probs = myprobs)[9],
NA
)
,
digits = 1),
bty = "n")
cite()
citation()
my_colors <- colorRampPalette(c("grey", "darkred"))(max(ceiling(tract2$maxdist)))
par(mfrow=c(1,2))
plot(tract2,
col = my_colors[ceiling(tract2$maxdist)],
border = "black",
lwd = 0.1,
ylim = c(-690000, -560000))
plot(block2,
col = my_colors[ceiling(block2$maxdist)],
border = "black",
lwd = 0.1,
border = FALSE,
ylim = c(-690000, -560000))
plot(block2,
col = my_colors[ceiling(block2$maxdist)],
border = "black",
lwd = 0.1,
ylim = c(-690000, -560000))
