#######################
# ATTACH LIBRARIES
#######################
library(RCurl)
library(RColorBrewer)
suppressPackageStartupMessages(library(googleVis))
library(reshape)
library(reldist)
#######################
# READ IN IMMUNIZATION HISTORY FROM GOOGLE
#######################
myLink <- "https://docs.google.com/spreadsheets/d/1rJrZwc9KmQsa2a7bOAX4wvPLc2p4lEtiuvxyufmE070/export?&format=csv"
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
myCsv <- getURL(myLink)
ir <- read.csv(textConnection(myCsv), skip=0)
rm(myCsv, myLink)
ir$team2014 <- factor(ir$team2014)
#######################
# PLOT
#######################
# M <- gvisMotionChart(data = ir,
#                      idvar = "school",
#                      timevar = "year",
#                      xvar = "year",
#                      yvar = "immRate",
#                      colorvar = "team2014",
#                      sizevar = "totMem")
# plot(M)
#
# M <- gvisMotionChart(data = ir, idvar="school", timevar="year")
#
#
# plot(M)
#######################
#
#######################
#######################
#
#######################
head(ir)
#######################
# ATTACH LIBRARIES
#######################
library(RCurl)
library(RColorBrewer)
suppressPackageStartupMessages(library(googleVis))
library(reshape)
library(reldist)
#######################
# READ IN IMMUNIZATION HISTORY FROM GOOGLE
#######################
myLink <- "https://docs.google.com/spreadsheets/d/1rJrZwc9KmQsa2a7bOAX4wvPLc2p4lEtiuvxyufmE070/export?&format=csv"
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
myCsv <- getURL(myLink)
ir <- read.csv(textConnection(myCsv), skip=0)
rm(myCsv, myLink)
ir$team2014 <- factor(ir$team2014)
#######################
# PLOT
#######################
# M <- gvisMotionChart(data = ir,
#                      idvar = "school",
#                      timevar = "year",
#                      xvar = "year",
#                      yvar = "immRate",
#                      colorvar = "team2014",
#                      sizevar = "totMem")
# plot(M)
#
# M <- gvisMotionChart(data = ir, idvar="school", timevar="year")
#
#
# plot(M)
#######################
#
#######################
#######################
#
#######################
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
names(ir)
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
order(ir$immRate)
sort(ir$immRate)
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
order(ir$immRate)
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
shiny::runApp('ShinyApps/controlflu')
####################
# LOAD PACKAGES FOR MAPPING
####################
# IF NOT YET INSTALLED ON YOUR SYSTEM, RUN
# install.packages("packagename") FIRST
library(maptools)
library(rgdal)
####################
# SET WD TO THE GIS FOLDER
####################
setwd("C:/Users/BrewJR/Documents/uf/phc6194/lecture1")
####################
# READ IN CENSUS TRACT-LEVEL DATA
####################
ems <- readOGR("dataset",
layer="fdem_ems_sep08_Project_Alachua_15_mile")
blocks <- readOGR("dataset",
layer = "Alachua_County_Census_Blocks_tgr12001blk00")
boundary <- readOGR("dataset",
layer = "Alachua_County_Boundary_tgr12001cty00")
roads <- readOGR("dataset",
layer = "Alachua_County_Roads_tgr12001lkA")
water <- readOGR("dataset",
layer = "Alachua_County_water_bodies_tgr12001wat")
plot(blocks)
mycols <- colorRampPalette(brewer.pal(8, "Greys"))(nrow(blocks))
library(RColorBrewer)
mycols <- colorRampPalette(brewer.pal(8, "Greys"))(nrow(blocks))
mycols <- sample(mycols)
plot(blocks,
col=mycols)
plot(water, add = TRUE, col = "blue")
lines(water)
polygons(water)
plot(water)
water <- spTransform(water,
CRS(proj4string(blocks)))
plot(blocks,
col=mycols)
plot(water, add = TRUE, col = "blue")
plot(water, add = TRUE, border = FALSE, col = "blue")
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.3))
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
boundary <- spTransform(boundary,
CRS(proj4string(blocks)))
plot(boundary, col="black", add=TRUE)
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
plot(boundary, border = "black", add=TRUE)
plot(boundary, border = "black", add=TRUE, lwd=3)
plot(water, add = TRUE, border = FALSE, col = "darkblue")
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
#plot(boundary, border = "black", add=TRUE, lwd=3)
plot(water, add = TRUE, border = FALSE, col = "darkblue")
roads <- spTransform(boundary,
CRS(proj4string(roads)))
plot(roads, add=TRUE, col="darkgreen")
lines(roads, add=TRUE, col="darkgreen")
plot(roads, add=TRUE, border = "darkgreen", col="darkgreen")
roads <- spTransform(roads,
CRS(proj4string(blocks)))
plot(roads, add=TRUE, col="darkgreen")
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
#plot(boundary, border = "black", add=TRUE, lwd=3)
plot(water, add = TRUE, border = FALSE, col = "darkblue")
plot(roads, add=TRUE, border=FALSE, col="darkgreen")
ems <- spTransform(ems,
CRS(proj4string(blocks)))
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
#plot(boundary, border = "black", add=TRUE, lwd=3)
plot(water, add = TRUE, border = FALSE, col = "darkblue")
plot(roads, add=TRUE, border=FALSE, col="darkgreen")
plot(ems, add=TRUE, border=FALSE, col=adjustcolor("darkred", alpha.f=0.7),
cex=3)
plot(roads)
roads <- readOGR("dataset",
layer = "Alachua_County_Roads_tgr12001lkA")
roads <- spTransform(roads,
CRS(proj4string(blocks)))
plot(roads)
plot(water, add = TRUE, border = FALSE, col = "darkblue")
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
#plot(boundary, border = "black", add=TRUE, lwd=3)
plot(water, add = TRUE, border = FALSE, col = "darkblue")
plot(roads, add = TRUE, col="darkgreen")
plot(ems, add=TRUE, border=FALSE, col=adjustcolor("darkred", alpha.f=0.7),
cex=3, pch=16)
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
#plot(boundary, border = "black", add=TRUE, lwd=3)
plot(water, add = TRUE, border = FALSE, col = adjustcolor("darkblue", alpha.f=0.6))
plot(roads, add = TRUE, col="black")
plot(ems, add=TRUE, border=FALSE, col=adjustcolor("darkred", alpha.f=0.5),
cex=2, pch=16)
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE, add = TRUE)
mycols <- colorRampPalette(brewer.pal(8, "Reds"))(nrow(blocks))
mycols <- sample(mycols)
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
mycols <- colorRampPalette(brewer.pal(8, "Greens"))(nrow(blocks))
mycols <- sample(mycols)
plot(blocks,
col=adjustcolor(mycols, alpha.f=0.7),
border=FALSE)
plot(boundary, border = "grey", add=TRUE, lwd=1)
plot(water, add = TRUE, border = FALSE, col = adjustcolor("darkblue", alpha.f=0.6))
plot(roads, add = TRUE, col="black")
