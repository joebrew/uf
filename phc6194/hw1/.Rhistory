lines(c(x+50*s,x+30*s), c(y+50*s,y+55*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+70*s), c(y+50*s,y+55*s),lwd=lwd, col=linecol) # Right
}
if (arms=="up") {
lines(c(x+50*s,x+32*s), c(y+50*s,y+65*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+68*s), c(y+50*s,y+65*s),lwd=lwd, col=linecol) # Right
}
if (arms=="hip") {
lines(c(x+50*s,x+37*s,x+48*s), c(y+56*s,y+47*s,y+40*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+63*s,x+51*s), c(y+56*s,y+49*s,y+62*s),lwd=lwd, col=linecol) # Right
}
if (arms=="wave") {
lines(c(x+50*s,x+38*s,x+33*s), c(y+56*s,y+60*s,y+78*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+63*s,x+52*s), c(y+56*s,y+47*s,y+40*s),lwd=lwd, col=linecol) # Right
}
# Draw male legs
if (gender=="male") {
lines(c(x+50*s,x+40*s), c(y+35*s,y+5*s),lwd=lwd, col=linecol)
lines(c(x+50*s,x+60*s), c(y+35*s,y+5*s),lwd=lwd, col=linecol)
}
# Draw female legs and dress
if (gender!="male") {
# Draw legs
lines(c(x+45*s,x+45*s), c(y+17*s,y+5*s),lwd=lwd, col=linecol)
lines(c(x+55*s,x+55*s), c(y+17*s,y+5*s),lwd=lwd, col=linecol)
# Draw dress
polygon(c(x+s*50,x+s*35,x+s*65),
c(y+s*40,y+s*17,y+s*17),
col=clcol, border=linecol,lwd=lwd)
}
# Draw hat
if (hat==T) polygon(
c(x+35*s,x+65*s,x+65*s,x+59*s,x+58*s,x+42*s,x+41*s,x+35*s),
c(y+84*s,y+84*s,y+86*s,y+86*s,y+91*s,y+91*s,y+86*s,y+86*s),
col=clcol, border=linecol,lwd=lwd)
}
# Map of stick figures
par(mar = rep(0, 4))
plot(c(.25,1.25), c(0,3), type="n", xaxt='n', yaxt='n', ann=FALSE)
draw.stick(0,0, arms="hip")
draw.stick(.5,0, gender="female", arms="up")
draw.stick(0,1, arms="nuetral", lwd=2, linecol=gray(.5),
clcol="red", face="sad")
draw.stick(.5,1, gender="female", arms="down", clcol="purple",
lwd=2, linecol=gray(.5), face="sad",hat=T)
draw.stick(0,2, arms="wave", linecol=gray(.7),
clcol="blue", face="surprised",hat=F)
draw.stick(.5,2, gender="female", arms="hip", clcol="light blue",
linecol=gray(.7),face="annoyed")
# Solitary annoyed figure
plot(c(.25,.75), c(0,1), type="n")
draw.stick(0,0, face="surprised", gender="male",
arms="wave", hat=F)
install.packages("plotrix")
# FROM
# https://github.com/EconometricsBySimulation/R-Graphics/blob/master/Stick-Figures/draw.stick.R
# Stick Man/Woman Generating Function
draw.stick <- function(x,y,scale=1,arms="down",
gender="male",lwd=3, clcol="white",
face="happy", linecol=gray(.3),
hat=NA) {
# clcol: color of clothes - any color
# scale: fize of figure
# x,y left bottom alignment of figure
# linecol: color of lines - any color
# lwd: line weight
# Arms: "down", "nuetral", "up", "hip", "wave"
# Gender: "male", "female"
# Face: "happy", "sad", "annoyed", "surprised"
# Hat: plot hat T,F
# Set the figure scale, default it 1
s <- scale/100
# If is undefined then give the man a hat
if (is.na(hat)) hat<-(gender=="male")
require("plotrix")
# Draw Head
draw.ellipse(x+50*s,y+75*s,10*s,15*s,lwd=lwd, border=linecol)
if (face=="happy") {
# Draw eyes
draw.ellipse(x+46*s,y+77*s,2.5*s,2*s,lwd=lwd, border=linecol)
draw.ellipse(x+54*s,y+77*s,2.5*s,2*s,lwd=lwd, border=linecol)
# Draw mouth
draw.ellipse(x+50*s,y+72*s,6*s,8*s, segment = c(-160,-20),
lwd=lwd, border=linecol)
}
if (face=="sad")   {
# Draw eyes
draw.ellipse(x+46*s,y+75*s,2*s,2*s,lwd=lwd, border=linecol)
draw.ellipse(x+54*s,y+75*s,2*s,2*s,lwd=lwd, border=linecol)
# Draw mouth
draw.ellipse(x+50*s,y+60*s,6*s,8*s, segment = c(140,40),
lwd=lwd, border=linecol)
}
if (face=="surprised")   {
# Draw eyes
draw.ellipse(x+46*s,y+78*s,3*s,2*s,lwd=lwd, border=linecol)
draw.ellipse(x+54*s,y+78*s,3*s,2*s,lwd=lwd, border=linecol)
# Draw irises
#  draw.ellipse(x+46*s,y+78*s,1*s,1*s,lwd=lwd, border=linecol)
#  draw.ellipse(x+54*s,y+78*s,1*s,1*s,lwd=lwd, border=linecol)
# Draw mouth
draw.ellipse(x+50*s,y+65*s,3*s,4*s,
lwd=lwd, border=linecol)
}
if (face=="annoyed")  {
# Draw mouth
lines(c(x+46*s,x+55*s), c(y+66*s,y+68*s),lwd=lwd, col=linecol)
# Draw eyes
draw.ellipse(x+46*s,y+76*s,2*s,2*s,lwd=lwd, border=linecol)
draw.ellipse(x+54*s,y+76*s,2*s,1*s,lwd=lwd, border=linecol)
}
# Draw torso
lines(c(x+50*s,x+50*s), c(y+35*s,y+60*s),lwd=lwd, col=linecol)
# Draw arms
if (arms=="down") {
lines(c(x+50*s,x+36*s), c(y+55*s,y+30*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+64*s), c(y+55*s,y+30*s),lwd=lwd, col=linecol) # Right
}
if (arms=="nuetral") {
lines(c(x+50*s,x+30*s), c(y+50*s,y+55*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+70*s), c(y+50*s,y+55*s),lwd=lwd, col=linecol) # Right
}
if (arms=="up") {
lines(c(x+50*s,x+32*s), c(y+50*s,y+65*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+68*s), c(y+50*s,y+65*s),lwd=lwd, col=linecol) # Right
}
if (arms=="hip") {
lines(c(x+50*s,x+37*s,x+48*s), c(y+56*s,y+47*s,y+40*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+63*s,x+51*s), c(y+56*s,y+49*s,y+62*s),lwd=lwd, col=linecol) # Right
}
if (arms=="wave") {
lines(c(x+50*s,x+38*s,x+33*s), c(y+56*s,y+60*s,y+78*s),lwd=lwd, col=linecol) # Left
lines(c(x+50*s,x+63*s,x+52*s), c(y+56*s,y+47*s,y+40*s),lwd=lwd, col=linecol) # Right
}
# Draw male legs
if (gender=="male") {
lines(c(x+50*s,x+40*s), c(y+35*s,y+5*s),lwd=lwd, col=linecol)
lines(c(x+50*s,x+60*s), c(y+35*s,y+5*s),lwd=lwd, col=linecol)
}
# Draw female legs and dress
if (gender!="male") {
# Draw legs
lines(c(x+45*s,x+45*s), c(y+17*s,y+5*s),lwd=lwd, col=linecol)
lines(c(x+55*s,x+55*s), c(y+17*s,y+5*s),lwd=lwd, col=linecol)
# Draw dress
polygon(c(x+s*50,x+s*35,x+s*65),
c(y+s*40,y+s*17,y+s*17),
col=clcol, border=linecol,lwd=lwd)
}
# Draw hat
if (hat==T) polygon(
c(x+35*s,x+65*s,x+65*s,x+59*s,x+58*s,x+42*s,x+41*s,x+35*s),
c(y+84*s,y+84*s,y+86*s,y+86*s,y+91*s,y+91*s,y+86*s,y+86*s),
col=clcol, border=linecol,lwd=lwd)
}
# Map of stick figures
par(mar = rep(0, 4))
plot(c(.25,1.25), c(0,3), type="n", xaxt='n', yaxt='n', ann=FALSE)
draw.stick(0,0, arms="hip")
draw.stick(.5,0, gender="female", arms="up")
draw.stick(0,1, arms="nuetral", lwd=2, linecol=gray(.5),
clcol="red", face="sad")
draw.stick(.5,1, gender="female", arms="down", clcol="purple",
lwd=2, linecol=gray(.5), face="sad",hat=T)
draw.stick(0,2, arms="wave", linecol=gray(.7),
clcol="blue", face="surprised",hat=F)
draw.stick(.5,2, gender="female", arms="hip", clcol="light blue",
linecol=gray(.7),face="annoyed")
# Solitary annoyed figure
plot(c(.25,.75), c(0,1), type="n")
draw.stick(0,0, face="surprised", gender="male",
arms="wave", hat=F)
draw.stick
draw.stick()
draw.stick(0,0)
par(mfrow=c(1,1))
draw.stick(0,0)
draw.stick(1,1)
draw.stick(1,1)
dev.off
plot(c(.25,1.25), c(0,3), type="n", xaxt='n', yaxt='n', ann=FALSE)
draw.stick(1,1)
draw.stick(0,0)
# http://www.ncbi.nlm.nih.gov/pmc/articles/PMC1052246/?page=5
# FAKE DATA FRAME
df <- data.frame(1:10000)
names(df) <- "id"
# RANDOMLY ASSIGN ORIGINS
df$orig <- factor(sample(x = c("Kenyan", "British"),
size = length(df$id),
replace = TRUE))
levels(df$orig) <- c("Kenyan", "British")
######
# GIVE SYSTOLIC B.P.
######
# POPULATE EMPTY VECTOR
df$sbp <- NA
# ASSIGN TO KENYANS
df$sbp[which(df$orig == "Kenyan")] <-
rnorm(n = length(df$id[which(df$orig == "Kenyan")]),
mean = 116,
sd = 8)
# ASSIGN TO BRITS
df$sbp[which(df$orig == "British")] <-
rnorm(n = length(df$id[which(df$orig == "British")]),
mean = 136,
sd = 9.3)
#######
# ASSIGN URBAN VS. RURAL
#######
df$geo <- NA
df$geo <- factor(sample (x = c("Urban", "Rural"),
size = nrow(df),
replace = TRUE))
#######
# ASSIGN MALE FEMALE
#######
df$sex <- NA
df$sex <- factor(sample (x = c("Male", "Female"),
size = nrow(df),
replace = TRUE))
#######
# ADD POINTS FOR URBAN PEOPLE
# SUBTRACT FOR RURAL
########
urbanAdd <- 3.5
df$sbp[which(df$geo == "Rural")] <-
df$sbp[which(df$geo == "Rural")] -
(0.5 * urbanAdd)
df$sbp[which(df$geo == "Urban")] <-
df$sbp[which(df$geo == "Urban")] +
(0.5 * urbanAdd)
#######
# ADD POINTS FOR MALES
# SUBTRACT FOR FEMALES
########
maleAdd <- 0.8
df$sbp[which(df$sex == "Female")] <-
df$sbp[which(df$sex == "Female")] -
(0.5 * maleAdd)
df$sbp[which(df$sex == "Male")] <-
df$sbp[which(df$sex == "Male")] +
(0.5 * maleAdd)
########
# SUBSET INTO TWO DATAFRAMES
# K = kenyans
# B = brits
########
k <- df[which(df$orig == "Kenyan"),]
b <- df[which(df$orig == "British"),]
hist(k$sbp,
xlab = "Systolic Blood Pressure",
col =adjustcolor("darkred", alpha.f=0.6),
border = adjustcolor("black", alpha.f=0.3),
breaks = 30,
xlim = c(60, 200))
hist(b$sbp,
xlab = NA,
col =adjustcolor("darkblue", alpha.f=0.6),
border = adjustcolor("black", alpha.f=0.3),
breaks = 30,
add = TRUE)
#########
# LINEAR MODELS
#########
#### FUNCTION FOR PLOTTING OUTCOME OF LINEAR MODELS
library(Hmisc)
BarFun <- function(model, err = FALSE){
x <- cbind(OR = coef(model), confint(model))
bp <- barplot(x[-1,1],
names.arg = gsub(paste(colnames(df), collapse = "|"),
"",  row.names(x)[-1]),
border = NA,
ylab = "Increase in SBP")
if(err){
errbar(x = bp[,1],
y = x[-1,1],
yplus = x[-1, 3],
yminus = x[-1,2],
errbar.col = "darkred",
add = TRUE,
pch = NA)
}
}
# FIT SIMPLE
fitSimple <- lm(sbp ~  geo + sex, data = df)
# FIT FULL
fitFull <- lm(sbp ~  orig + geo + sex, data = df)
BarFun(fitSimple, err = TRUE)
BarFun(fitFull, err = TRUE)
hist(k$sbp,
xlab = "Systolic Blood Pressure",
col =adjustcolor("darkred", alpha.f=0.6),
border = adjustcolor("black", alpha.f=0.3),
breaks = 30,
xlim = c(60, 200),
main = "SBP among Kenyan nomads")
hist(b$sbp,
xlab = NA,
col =adjustcolor("darkblue", alpha.f=0.6),
border = adjustcolor("black", alpha.f=0.3),
breaks = 30,
add = TRUE)
legend(x= "topleft",
fill = adjustcolor(c("darkblue", "darkred"), alpha.f=0.6),
border = adjustcolor("black", alpha.f = 0.3),
legend = c("British civil servants",
"Kenyan nomads"),
bty = "n")
legend(x= "topright",
fill = adjustcolor(c("darkblue", "darkred"), alpha.f=0.6),
border = adjustcolor("black", alpha.f = 0.3),
legend = c("British civil servants",
"Kenyan nomads"),
bty = "n",
cex = 0.6)
hist(k$sbp,
xlab = "Systolic Blood Pressure",
col =adjustcolor("darkblue", alpha.f=0.6),
border = adjustcolor("black", alpha.f=0.3),
breaks = 30,
xlim = c(60, 200),
main = "SBP among British civil servants")
hist(b$sbp,
xlab = "Systolic Blood Pressure",
col =adjustcolor("darkblue", alpha.f=0.6),
border = adjustcolor("black", alpha.f=0.3),
breaks = 30,
xlim = c(60, 200),
main = "SBP among British civil servants")
#### FUNCTION FOR PLOTTING OUTCOME OF LINEAR MODELS
library(Hmisc)
BarFun <- function(model, err = FALSE){
x <- cbind(OR = coef(model), confint(model))
bp <- barplot(x[-1,1],
names.arg = gsub(paste(colnames(df), collapse = "|"),
"",  row.names(x)[-1]),
border = NA,
ylab = "Increase in SBP")
if(err){
errbar(x = bp[,1],
y = x[-1,1],
yplus = x[-1, 3],
yminus = x[-1,2],
errbar.col = "darkred",
add = TRUE,
pch = NA)
}
}
# FIT SIMPLE
fitSimple <- lm(sbp ~  geo + sex, data = df)
# FIT FULL
fitFull <- lm(sbp ~  orig + geo + sex, data = df)
BarFun(fitSimple, err = TRUE)
BarFun(fitFull, err = TRUE)
library(Hmisc)
BarFun <- function(model, err = FALSE){
x <- cbind(OR = coef(model), confint(model))
bp <- barplot(x[-1,1],
names.arg = gsub(paste(colnames(df), collapse = "|"),
"",  row.names(x)[-1]),
border = NA,
ylab = "Increase in SBP",
ylim = c(0, max(x[-1,1])*1.2))
if(err){
errbar(x = bp[,1],
y = x[-1,1],
yplus = x[-1, 3],
yminus = x[-1,2],
errbar.col = "darkred",
add = TRUE,
pch = NA)
}
}
# FIT SIMPLE
fitSimple <- lm(sbp ~  geo + sex, data = df)
# FIT FULL
fitFull <- lm(sbp ~  orig + geo + sex, data = df)
BarFun(fitSimple, err = TRUE)
library(Hmisc)
BarFun <- function(model, err = FALSE,
col = "darkred"){
x <- cbind(OR = coef(model), confint(model))
bp <- barplot(x[-1,1],
names.arg = gsub(paste(colnames(df), collapse = "|"),
"",  row.names(x)[-1]),
border = adjustcolor("black", alpha.f=0.3),
ylab = "Increase in SBP",
ylim = c(0, max(x[-1,1])*1.2),
col = adjustcolor(col, alpha.f=0.6))
if(err){
errbar(x = bp[,1],
y = x[-1,1],
yplus = x[-1, 3],
yminus = x[-1,2],
errbar.col = "darkred",
add = TRUE,
pch = NA)
}
}
# FIT SIMPLE
fitSimple <- lm(sbp ~  geo + sex, data = df)
# FIT FULL
fitFull <- lm(sbp ~  orig + geo + sex, data = df)
BarFun(fitSimple, err = TRUE)
fitBrit <- lm(sbp ~ geo + sex, data = b)
BarFun(fitBrit, err = TRUE, col = "darkblue")
title(main = "Regression output: predictors of SBP")
title(main = "Regression output: predictors of SBP among British
civil servants", cex.main = 0.7)
BarFun(fitBrit, err = TRUE, col = "darkblue")
title(main = "Regression output: predictors of SBP among British
civil servants", cex.main = 0.7)
BarFun(fitBrit, err = TRUE, col = "darkblue")
title(main = "Regression output: predictors of SBP among British
civil servants", cex.main = 1)
fitBrit <- lm(sbp ~ geo + sex, data = k)
fitBrit <- lm(sbp ~ geo + sex, data = b)
# FIT KENYAN
fitKenyan <- lm(sbp ~ geo + sex, data = k)
BarFun(fitKenyan, err = TRUE, col = "darkblue")
BarFun(fitKenyan, err = TRUE, col = "darkred")
title(main = "Regression output: predictors of SBP among Kenyan nomads", cex.main = 1)
BarFun(fitFull, err = TRUE, col = "darkgreen")
title(main = "Regression output: predictors of SBP among both populations", cex.main = 1)
setwd("C:/Users/BrewJR/Documents/uf/phc6194/hw1")
# install.packages("packagename") FIRST
library(maptools)
library(rgdal)
setwd("C:/Users/BrewJR/Documents/uf/phc6194/hw1")
####################
# READ IN FLORIDA COUNTIES SHAPEFILE
####################
fcty2 <- readOGR("FCTY2",
layer="FCTY2")
####################
# READ IN TRAILS SHAPEFILE
####################
trails <- readOGR("existing_trails_apr09",
layer="existing_trails_apr09")
plot(fcty2)
plot(fcty2, trails, add = T)
plot(trails, add = T)
plot(trails)
plot(fcty2, add = T)
proj4string(trails)
proj4string(fcty2)
proj4string(trails) <- proj4string(fcty2)
proj4string(fcty2)
proj4string(trails)
coordinates(trails)
proj4string(fcty2) <- proj4string(trails)
proj4string(trails)
CRS(trails)
crs(fcty2)
CRS(fcty2)
proj4string(fcty2)
spTransform(trails, CRS("+init=espg:4326"))
x <- spTransform(trails, CRS("+init=espg:4326"))
x <- spTransform(trails, CRS("+init=epsg:4326"))
plot(fcty2)
plot(x, add = T, col = "red")
plot(fcty2)
plot(trails_latlon, add = TRUE,
col = adjustcolor("darkred", alpha.f = 0.6)
)
trails_latlon <- spTransform(trails, CRS("+init=epsg:4326"))
plot(fcty2)
plot(trails_latlon, add = TRUE,
col = adjustcolor("darkred", alpha.f = 0.6))
summary(fcty2)
invsisible(text(getSpPolygonsLabptSlots(fcty2),
labels = as.character(fcty2$NAME),
cex = 0.4))
invisible(text(getSpPolygonsLabptSlots(fcty2),
labels = as.character(fcty2$NAME),
cex = 0.4))
invisible(text(getSpPPolygonsLabptSlots(fcty2),
labels = as.character(fcty2$NAME),
cex = 0.4))
text(getSpPPolygonsLabptSlots(fcty2),
labels = as.character(fcty2$NAME),
cex = 0.4)
summary(fcty2)
coordinates(fcty2)
text(coordinates(fcty2),
labels = as.character(fcty2$NAME),
cex = 0.4)
trails_latlon <- spTransform(trails, CRS("+init=epsg:4326"))
plot(fcty2, border = TRUE, col = adjustcolor("black", alpha.f=0.6),
fill = adjustcolor("black", alpha.f = 0.1))
warnings()
plot(fcty2, border = TRUE, col = adjustcolor("black", alpha.f=0.6))
plot(fcty2, border = "green", col = adjustcolor("black", alpha.f=0.6))
plot(fcty2,
border = adjustcolor("black", alpha.f=0.1),
col = adjustcolor("black", alpha.f=0.1))
plot(fcty2,
border = adjustcolor("black", alpha.f=0.3),
col = adjustcolor("black", alpha.f=0.1))
# ADD LABELS
text(coordinates(fcty2),
labels = as.character(fcty2$NAME),
cex = 0.4,
col = adjustcolor("black", alpha.f=0.6))
library(maps)
map("world")
map("world", col = "black")
map("world", col = "black", lwd = 0.5)
map("world", "spain")
map("world", "usa")
map("spain")
